name: Playwright Tests
on:
  workflow_dispatch:
  push:
    tags:
      - '*'
  schedule:
    - cron: "0 2 * * *"

jobs:
  e2e:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'kubewarden' || github.event_name == 'workflow_dispatch'
    steps:
    # ==================================================================================================
    # Check out code and install requirements
    - uses: actions/checkout@v3
    - uses: azure/setup-kubectl@v3
    - uses: actions/setup-node@v3
    - name: Install playwright
      working-directory: tests
      run: |
        npm install
        npx playwright install --with-deps chromium

    # ==================================================================================================
    # Create k3d cluster and install rancher
    - name: "Create kubernetes cluster"
      uses: AbsaOSS/k3d-action@v2.4.0
      with:
        cluster-name: ${{ github.repository_owner }}-ghactions-cluster
        args: "--agents 1 --image rancher/k3s:v1.24.11-k3s1"
    - name: Install Rancher
      run: |
        RANCHER_FQDN=$(k3d cluster list ${{ github.repository_owner }}-ghactions-cluster -o json | jq -r '[.[].nodes[] | select(.role == "server").IP.IP] | first').nip.io

        # Wait for kube-system
        for i in {1..20}; do
            output=$(kubectl get pods --no-headers -o wide -n kube-system | grep -vw Completed || echo 'Fail')
            grep -vE '([0-9]+)/\1 +Running' <<< $output || break
            [ $i -ne 20 ] && sleep 10 || { echo "Godot: pods not running"; exit 1; }
        done

        # Wait for cert-manager
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.yaml
        kubectl wait --for=condition=Available deployment --timeout=2m -n cert-manager --all

        helm repo add --force-update rancher-latest https://releases.rancher.com/server-charts/latest
        helm upgrade --install rancher rancher-latest/rancher --wait \
            --namespace cattle-system --create-namespace \
            --set hostname=$RANCHER_FQDN \
            --set bootstrapPassword=sa \
            --devel
        for i in {1..20}; do
            output=$(kubectl get pods --no-headers -o wide -n cattle-system | grep -vw Completed || echo 'Wait: cattle-system')$'\n'
            output+=$(kubectl get pods --no-headers -o wide -n cattle-fleet-system | grep -vw Completed || echo 'Wait: cattle-fleet-system')$'\n'
            output+=$(kubectl get pods --no-headers -o wide -n cattle-fleet-local-system | grep -vw Completed || echo 'Wait: cattle-fleet-local-system')
            grep -vE '([0-9]+)/\1 +Running|^$' <<< $output || break
            [ $i -ne 20 ] && sleep 30 || { echo "Godot: pods not running"; exit 1; }
        done
    
        echo "RANCHER_FQDN=$RANCHER_FQDN" >> $GITHUB_ENV

    - name: Patch git ref name into dashboard
      uses: mikefarah/yq@master
      with:
        cmd: yq -i '.kubewarden.dashboard.intro += "(${{ github.ref_name }})"' pkg/kubewarden/l10n/en-us.yaml

    - name: Prepare ENV for build
      run: |
        yarn install --ignore-engines
        # https://rancher.github.io/dashboard/testing/e2e-test#setup-for-local-tests
        # echo "RANCHER_URL=https://$FQDN" >> $GITHUB_ENV
        # yq --arg git $(git rev-parse --short HEAD) -e -i -y '.kubewarden.dashboard.intro += " " + $git' pkg/kubewarden/l10n/en-us.yaml
        #cmd: yq '.kubewarden.dashboard.intro += " " + "$(pwd)"' pkg/kubewarden/l10n/en-us.yaml | grep intro
        #yq -i '.kubewarden.dashboard.intro += " " + ${{ github.ref_name }}' pkg/kubewarden/l10n/en-us.yaml
        echo "RANCHER_URL=https://localhost:8005" >> $GITHUB_ENV
        echo "API=https://$RANCHER_FQDN" >> $GITHUB_ENV


    # ==================================================================================================
    # Run playwright tests and upload results
    - name: Install kubewarden
      working-directory: tests
      run: npx playwright test installation -gv 0[12] -g 00
#    - name: Install policies
#      timeout-minutes: 90
#      run: npx playwright test policies

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: tests/test-results/
        retention-days: 30
