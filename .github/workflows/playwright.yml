name: Playwright Tests
on:
  workflow_dispatch:
  push:
    tags:
      - '*'
  schedule:
    - cron: "0 2 * * *"

defaults:
  run:
    working-directory: tests

jobs:
  # ==================================================================================================
  # Check out code and install requirements
  preparation:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: github.repository_owner == 'kubewarden' || github.event_name == 'workflow_dispatch'
    steps:
    # Install requirements
    - uses: actions/checkout@v3
    - uses: azure/setup-kubectl@v3
    - uses: actions/setup-node@v3
    - name: Install playwright
      run: |
        npm install
        npx playwright install --with-deps chromium

  # ==================================================================================================
  # Deploy k3d cluster and install rancher
  #  rancher:
  #    needs: preparation
  #    runs-on: ubuntu-latest
  #    steps:
    # Create cluster and Install rancher
    - name: "Create kubernetes cluster"
      uses: AbsaOSS/k3d-action@v2.4.0
      with:
        cluster-name: ${{ github.repository_owner }}-ghactions-cluster
        args: "--agents 1 --image rancher/k3s:v1.24.9-k3s2"
    - name: Install Rancher
      run: |
        FQDN=$(k3d cluster list ${{ github.repository_owner }}-ghactions-cluster -o json | jq -r '[.[].nodes[] | select(.role == "server").IP.IP] | first').nip.io
        echo "RANCHER_URL=https://$FQDN" >> $GITHUB_ENV

        # Wait for kube-system
        for i in {1..20}; do
            output=$(kubectl get pods --no-headers -o wide -n kube-system | grep -vw Completed || echo 'Fail')
            grep -vE '([0-9]+)/\1 +Running' <<< $output || break
            [ $i -ne 20 ] && sleep 10 || { echo "Godot: pods not running"; exit 1; }
        done

        # Wait for cert-manager
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.yaml
        kubectl wait --for=condition=Available deployment --timeout=2m -n cert-manager --all

        helm repo add --force-update rancher-latest https://releases.rancher.com/server-charts/latest
        helm upgrade --install rancher rancher-latest/rancher --wait \
            --namespace cattle-system --create-namespace \
            --set hostname=$FQDN \
            --set bootstrapPassword=sa \
            --devel
        for i in {1..20}; do
            output=$(kubectl get pods --no-headers -o wide -n cattle-system | grep -vw Completed || echo 'Wait: cattle-system')$'\n'
            output+=$(kubectl get pods --no-headers -o wide -n cattle-fleet-system | grep -vw Completed || echo 'Wait: cattle-fleet-system')$'\n'
            output+=$(kubectl get pods --no-headers -o wide -n cattle-fleet-local-system | grep -vw Completed || echo 'Wait: cattle-fleet-local-system')
            grep -vE '([0-9]+)/\1 +Running|^$' <<< $output || break
            [ $i -ne 20 ] && sleep 30 || { echo "Godot: pods not running"; exit 1; }
        done
    

  # ==================================================================================================
  # Run playwright tests and upload results
  #  playwright:
  #    needs: rancher
  #    runs-on: ubuntu-latest

      #    steps:
    - name: Install kubewarden
      run: npx playwright test installation
    - name: Install policies
      run: npx playwright test policies

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: tests/test-results/
        retention-days: 30
