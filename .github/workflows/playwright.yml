name: Playwright Tests
on:
  pull_request:
    paths: [ package.json ]
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      k3s_version:
        description: k3s_version "v1.25.5+k3s2" or "v1.24"
        default: v1.24.9+k3s2
        type: string
        required: true
      keep_env:
        description: keeps the env running if not empty
        required: false
        default: ""
defaults:
  run:
    working-directory: tests
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - name: Set up Helm
      uses: azure/setup-helm@v3
    - uses: azure/setup-kubectl@v3
    - uses: AbsaOSS/k3d-action@v2.4.0
      name: "Create Kubernetes cluster"
      with:
        cluster-name: ${{ github.repository_owner }}-ghactions-cluster
        args: "--agents 1 --image rancher/k3s:v1.24.9-k3s2"
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install dependencies
      run: |
        npm install
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Install cert-manager
      run: |
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.yaml
        for i in {1..20}; do
            output=$(kubectl get pods --no-headers -o wide -n cert-manager | grep -vw Completed || echo 'Fail')
            grep -vE '([0-9]+)/\1 +Running' <<< $output || break
            [ $i -ne 20 ] && sleep 30 || { echo "Godot: pods not running"; exit 1; }
        done
    - name: Install Rancher
      run: |
        IP_MASTERS=$(k3d cluster list ${{ github.repository_owner }}-ghactions-cluster -o json | jq -r '[.[].nodes[] | select(.role == "server").IP.IP] | first')
        helm repo add --force-update rancher-latest https://releases.rancher.com/server-charts/latest
        helm upgrade --install rancher rancher-latest/rancher --wait \
            --namespace cattle-system --create-namespace \
            --set hostname=${IP_MASTERS}.nip.io \
            --set bootstrapPassword=sa \
            --devel
        for i in {1..20}; do
            output=$(kubectl get pods --no-headers -o wide -n cattle-system | grep -vw Completed || echo 'Wait: ns:cattle-system')$'\n'
            output+=$(kubectl get pods --no-headers -o wide -n cattle-fleet-system | grep -vw Completed || echo 'Wait: ns:cattle-fleet-system')$'\n'
            output+=$(kubectl get pods --no-headers -o wide -n cattle-fleet-local-system | grep -vw Completed || echo 'Wait ns:cattle-fleet-local-system')
            grep -vE '([0-9]+)/\1 +Running|^$' <<< $output || break
            [ $i -ne 20 ] && sleep 30 || { echo "Godot: pods not running"; exit 1; }
        done
        echo "RANCHER_URL=https://$IP_MASTERS.nip.io" >> $GITHUB_ENV
    - name: Run Playwright tests
      run: npx playwright test installation
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

#      RANCHER_URL=${{env.RANCHER_URL}}
#      env:
#        RANCHER_URL: 
