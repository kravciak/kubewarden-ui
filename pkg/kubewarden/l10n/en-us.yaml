kubewarden:
  title: Kubewarden
  dashboard:
    title: Dashboard
    install: Install
    notInstalled: Kubewarden is not installed
    button: Install Kubewarden Prerequisites
    intro: YWelcome to Kubewarden
    blurb: A Dynamic Admission Controller for Kubernetes
    description: |
      Kubewarden is a policy engine for Kubernetes. It helps with keeping your Kubernetes clusters secure and compliant. Kubewarden policies can be written using regular programming languages or Domain Specific Languages (DSL). Policies are compiled into WebAssembly modules that are then distributed using traditional container registries.
    getStarted: Get Started
    issues: Issues
    headers:
      policyServer:
        title: Policy Servers
        description: Kubewarden uses Policy Servers to receive requests to be validated. It does that by executing Kubewarden's policies.
        linkText: Create Policy Server
        slotTitle: Policy Server Pods
      admissionPolicy:
        title: Admission Policies
        description: An Admission Policy is a namespace-wide resource. The policy will process only the requests that are targeting the Namespace where the Admission Policy is defined.
        linkText: Create Admission Policy
        slotTitle: Policies
      clusterAdmissionPolicy:
        title: Cluster Admission Policies
        description: The Cluster Admission Policy resource is the core of the Kubewarden stack. This resource defines how policies evaluate requests.
        linkText: Create Cluster Admission Policy
        slotTitle: Policies
      modes:
        title: Policy Modes
        monitor: Monitor
        protect: Protect
    appInstall:
      title: Kubewarden App Install
      description: This will take you to the app installation page for Kubewarden.
      button: Install Kubewarden
      stepTitle: Kubewarden Install
      reload: Unable to fetch Kubewarden Helm chart - reload required.
    prerequisites:
      title: Prerequisites
      certManager:
        title: Install Cert-Manager Package
        description: The kubewarden-controller depends on cert-manager. You need cert-manager to be installed before installing the kubewarden-controller chart.
        manualStep: |
          Click the button below and follow the <a target="_blank" rel="noopener noreferrer nofollow" href="https://docs.kubewarden.io/quick-start#installation">Documentation</a>, or run the <code>kubectl</code> command to install the latest version of cert-manager:
        applyCommand: 'kubectl apply -f https://github.com/jetstack/cert-manager/releases/latest/download/cert-manager.yaml'
        openShell: Open Kubectl Shell
        stepProgress: The active step will progress once Cert-Manager is installed.
      repository:
        title: Repository
        description: You will need the Kubewarden helm repository (https://charts.kubewarden.io) to install the `kubewarden` chart.
  tabs:
    general:
      label: General
      nameOverride:
        label: nameOverride
        description: Replaces the release name of the chart in Chart.yaml file when this is used to construct Kubernetes object names.
      fullnameOverride:
        label: fullnameOverride
        description: Completely replaces the generated release name.
      imagePullSecrets:
        label: Image Pull Secrets
        description: Secrets to pull container images from private registries.
      image:
        label: Image
        description: Controller image to be used.
        repository: Repository
        tag: Tag
      preDeleteJob: Kubectl image to be used in the pre-delete helm hook.
      podAnnotations: Pod Annotations
      nodeSelector: Node Selector
      tolerations: Tolerations
      affinity: Affinity
      tls:
        source: Source
        certManagerIssuerName: Cert-Manager Issuer Name
    telemetry:
      label: Telemetry
      checkbox: Enabled
      port: Port
      tracing:
        label: Tracing
        endpoint: Endpoint
        jaeger: Jaeger endpoint to send traces.
        placeholder: all-in-one-collector.jaeger.svc.cluster.local:14250
    verification:
      label: Verification
    registry:
      label: Container Registry
  policyServer:
    title: Policy Servers
    noDefaultsInstalled:
      description: |
        The default PolicyServer and policies are not installed, click the button below to begin installing this chart. See the <a target="_blank" rel="noopener noreferrer nofollow" href="https://docs.kubewarden.io/quick-start#installation">documentation</a> for more information on installing charts.
      button: Install Chart
    policyGauge:
      byStatus: Policies by Status
      traces: Policy Validations
  admissionPolicy:
    title: Admission Policies
    description: AdmissionPolicy is a namespace-wide resource. These policies will process only the requests that are targeting the Namespace where the AdmissionPolicy is defined.
  clusterAdmissionPolicy:
    title: Cluster Admission Policies
    description: ClusterAdmissionPolicy is a cluster-wide resource. These policies will process all requests within the cluster where the ClusterAdmissionPolicy is defined.
  customPolicy:
    badge: Custom
    title: Custom Policy
    description: A generic template for using your own policy.
  policies:
    noArtifactHub: Official Kubewarden policies are hosted on <a href="https://artifacthub.io/packages/search?kind=13" target="_blank" rel="noopener noreferrer nofollow">ArtifactHub</a>, in order to show these you will need to add `artifacthub.io` to the whitelist-domain setting.
    noRules: There are no rules configured for this policy.
    namespaceWarning: This policy is targeting Rancher specific namespaces which will cause catastrophic failures with your Rancher deployment.
  utils:
    resetFilter: Reset Filter
  tracing:
    noJaeger: |
      No Jaeger service is installed, please follow the steps <a href="https://docs.kubewarden.io/operator-manual/telemetry/tracing/quickstart" target="_blank" rel="noopener noreferrer nofollow">listed here</a> to setup tracing for your policies.
    noRelatedTraces: No tracing data exists for the related policies.
    noTraces: No tracing data exists for this policy. 
  monitoring:
    notInstalled: |
      The Monitoring app is not installed, this will will need to be installed and configured to enable metrics. Follow <a href="https://docs.kubewarden.io/operator-manual/telemetry/metrics/quickstart#install-prometheus" target="_blank" rel="noopener noreferrer nofollow">these steps</a> to add the Kubewarden ServiceMonitor for Prometheus.
    install: Install Monitoring
  metrics:
    notInstalled: The Grafana dashboard for this Kubewarden resource can not be found. You need to create the ConfigMap for the dashboard.
    reload: Grafana dashboard created - reload required
    noService: The Metrics service is not currently active or is not installed correctly. Check the status of the Monitoring app.

  policyConfig:
    serverSelect:
      label: Policy Server
      tooltip: The PolicyServer that will receive the requests to be validated.
    module:
      label: Module
      tooltip: This is the WebAssembly module that holds the validation or mutation logic.
    mutating:
      label: Mutating
      tooltip: A mutating policy will rebuild the requests with definied values that are conformant with the policy definition.
    mode:
      label: Mode
      tooltip: The monitor mode is a way to deploy policies to the cluster in a way that all requests that go through the policy will be accepted, as if the policy didn't exist. Defaults to 'Protect'.
      warning: Once the policy mode has been switched to Protect, you will not be able to revert this change.
      update:
        checkbox: Update to Protect Mode
        title: Update Policy Mode
        body: The monitor mode is a way to view the behavior of a policy without letting it make the final decision on requests that are validated by the policy.
    ignoreRancherNamespaces:
      label: Ignore Rancher Namespaces
      tooltip: Certain policies will break core services of Rancher, this will add a default list of namespaces to ignore.
    rules:
      add: Add Rule Set
      remove: Remove Rule Set
    apiGroups:
      label: API Groups
      tooltip: The API groups the resources belong to.
    apiVersions:
      label: API Versions
      tooltip: The API versions the resources belong to.
    operations:
      label: Operation type
      tooltip: The operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT.
    resources:
      label: Resource type
      tooltip: The targeted resources for the policy. Needs to be a resource that is supported by the policy, this is determined in the `metadata.yml` of the selected policy.
    scope:
      label: Scope
      tooltip: Specifies the scope of this rule. Valid values are "Cluster", "Namespaced", and "". "Cluster" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. "Namespaced" means that only namespaced resources will match this rule. "" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is "*".
  policyServerConfig:
    defaultImage:
      label: Default Image
      tooltip: Use the default `policy-server` container image.
    image:
      label: Image URL
      tooltip: This is the container image the policy server.
    replicas: Replicas
    registry:
      description: The PolicyServer allows you to pull policies from OCI registries and HTTP servers, by default HTTPS is enforced with host TLS verification. You can interact with registries using untrusted certificates or even without TLS by using the `insecureSources` setting. This approach is highly discouraged in environments closer to production. More information on configuring custom certificate authorities can be found <a href="https://docs.kubewarden.io/operator-manual/policy-servers/custom-cas" target="_blank" rel="noopener noreferrer nofollow">here</a>.
    insecureSources:
      title: Insecure Sources
      addLabel: Add Insecure Source
      placeholder: registry-dev.example.com:5500
    sourceAuthorities:
      title: Source Authorities
      add: Add Source Authority
      endpoint: Registry URI Endpoint
      placeholder: registry-pre.example.com:5500
      certificate: 
        label: Certificate 
        add: Add PEM Certificate
        remove: Remove Certificate
        file: Read Certificate from File
    verification:
      label: Verification Config
      description: This is the name of a VerificationConfig configmap within the same namespace, containing a Sigstore verification configuration. The configuration must be under a key named verification-config in the Configmap. More information can be found in the <a href="https://docs.kubewarden.io/distributing-policies/secure-supply-chain#configuring-the-policy-server-to-check-policy-signatures" target="_blank" rel="noopener noreferrer nofollow">Kubewarden docs</a>.
  policyCharts:
    signedPolicy:
      label: Signed
      tooltip: This policy has been signed with cosign (Sigstore).
    mutationPolicy:
      label: Mutation
      tooltip: Mutation Policy
    contextAware: Context Aware

asyncButton:
  artifactHub:
    action: Add ArtifactHub To Whitelist
    success: Added
    waiting: Adding&hellip;
  certManager:
    action: Apply Cert-Manager Package
    success: Applied
    waiting: Installing&hellip;
  kubewardenRepository:
    action: Add Kubewarden Repository
    success: Added
    waiting: Adding&hellip;
  grafanaDashboard:
    action: Add Grafana Dashboard
    success: Added
    wating: Adding&hellip;
